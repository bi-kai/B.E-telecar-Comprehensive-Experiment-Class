C51 COMPILER V7.00  SHOUDUAN                                                               06/02/2010 22:00:00 PAGE 1   


C51 COMPILER V7.00, COMPILATION OF MODULE SHOUDUAN
OBJECT MODULE PLACED IN shouduan.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE shouduan.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          /******************************************************************************************\ 
   2          ============================================================================================
   3          * T905.c
   4          *
   5          * This file is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTYT; 
   6          * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
   7          *
   8          *
   9          * NOTES:
  10          * This program is for the nRF905 with 232 interface;
  11          * $write date: 2004.4.7 ;time 11:00$
  12          * $Revision: 1 $
  13          *
  14          /*******************************************************************************************/
  15          #include <reg52.h>
  16          #include <intrins.h>
  17          
  18          #define uchar unsigned char 
  19          #define uint  unsigned int
  20          
  21          #define WC              0x00                    // Write configuration register command
  22          #define RC              0x10                    // Read  configuration register command
  23          #define WTP             0x20                    // Write TX Payload  command
  24          #define RTP             0x21                    // Read  TX Payload  command
  25          #define WTA             0x22                    // Write TX Address  command
  26          #define RTA             0x23                    // Read  TX Address  command
  27          #define RRP             0x24                    // Read  RX Payload  command
  28          /*******************************************************************************************/
  29          typedef struct RFConfig
  30          {
  31                  uchar n;
  32                  uchar buf[10];
  33          }RFConfig;
  34          
  35          code RFConfig RxTxConf={
  36                  10,
  37                  0x01, 0x0c, 0x44, 0x20, 0x20, 0xcc, 0xcc, 0xcc,0xcc, 0x58       
  38          };
  39          // The content of this struct is nRF905's initialize data.初始化数据
  40          // CH_NO=1;433MHZ;Normal Opration,No Retrans;RX,TX Address is 4 Bytes
  41          // RX TX Payload Width is 32 Bytes;Disable Extern Clock;Fosc=16MHZ
  42          // 8 Bits CRC And enable
  43          /*******************************************************************************************/
  44          uchar data TxBuf[32];
  45          uchar data RxBuf[32];
  46          uchar data Textbuf[2];
  47          uchar key;
  48          uchar rsbrf;
  49          uchar delayf;
  50          
  51          /*******************************************************************************************/
  52          uchar bdata DATA_BUF;
  53          sbit    flag=DATA_BUF^7;
  54          sbit    flag1=DATA_BUF^0;
  55          /*******************************************************************************************/
C51 COMPILER V7.00  SHOUDUAN                                                               06/02/2010 22:00:00 PAGE 2   

  56          sbit    TX_EN=P1^7;
  57          sbit    TRX_CE=P1^6;
  58          sbit    PWR_UP=P1^5;
  59          sbit    MISO=P1^1;
  60          sbit    MOSI=P1^0;
  61          sbit    SCK=P3^7;
  62          sbit    CSN=P3^3;
  63          
  64          sbit    AM=P1^3;//地址匹配
  65          sbit    DR=P3^2;//接收或发射完成
  66          sbit    CD=P1^4;//载波检测
  67          
  68          sbit    LED3=P2^4;
  69          sbit    LED4=P2^5;
  70          sbit    LED1=P2^6;
  71          sbit    LED2=P2^7;
  72          sbit    KEY1=P3^0;
  73          sbit    KEY2=P3^1;
  74          
  75          /*******************************************************************************************/
  76          void InitIO(void);                      // Initialize IO port
  77          void Inituart(void);                    // initialize 232 uart
  78          void Config905(void);                   // Config nRF905 module(组件、模块)配置NRF905模式
  79          void SetTxMode(void);                   // Set nRF905 in Tx mode
  80          void SetRxMode(void);                   // Set nRF905 in Rx mode
  81          void TxPacket(void);                    // Send data by nRF905
  82          void RxPacket(void);                    // Recive data by nRF905
  83          void SpiWrite(uchar);                   // Write data to nRF905
  84          uchar SpiRead(void);                    // Read data to nRF905
  85          void Delay(uchar n);                    // Delay 100us
  86          void Scankey(void);                             // Scan key
  87          void TxData (uchar x);                  // Send key_value to CRT display
  88          void comdebug(void);
  89          void send(unsigned char str[]);
  90          /*******************************************************************************************/
  91          void Delay(uchar n)
  92          {
  93   1              uint i;
  94   1              while(n--)
  95   1              for(i=0;i<80;i++);      
  96   1      }
  97          
  98          /*######################加入的舵机程序部分一########################*/
  99          //char duoji_1_UP=0;
 100          //char duoji_1_DOWN=0;
 101          sbit out_1=P1^2;
 102          sbit out_2=P3^4;
 103          unsigned int PWM_1=0xFA99;   //舵机1赋初值
 104          unsigned int PWM_2=0xFA99;   //舵机2赋初值
 105          bit longorshorttimerflag=0;
 106          bit longorshorttimerflag_2=0;
 107          unsigned int timerbuf[2]={0};
 108          
 109          void delayms(unsigned char ms);
 110          void refree_allpins();
 111          
 112          
 113          
 114          /*######################舵机部分程序一加入完毕####################*/
 115          
 116          /*********************直流电机加入的第一部分*********************************/
 117          sbit motor11=P2^0;//电机1的信号引脚
C51 COMPILER V7.00  SHOUDUAN                                                               06/02/2010 22:00:00 PAGE 3   

 118          sbit motor12=P2^1;
 119          
 120          sbit motor21=P2^2;//电机2的信号引脚
 121          sbit motor22=P2^3;
 122          
 123          /**********************直流电机加入的第一部分结束********************************/
 124          
 125          void main()
 126          {
 127   1      
 128   1      
 129   1      
 130   1          //================NRF905初始化
 131   1              CSN=1;                                          // Spi  disable                                         
 132   1              SCK=0;                                          // Spi clock line init high
 133   1              DR=1;                                           // Init DR for input
 134   1              AM=1;                                           // Init AM for input
 135   1              PWR_UP=1;                                       // nRF905 power on
 136   1              TRX_CE=0;                                       // Set nRF905 in standby mode
 137   1              TX_EN=0;                                        // set radio in Rx mode 
 138   1      
 139   1              //================
 140   1              Config905();                            // Config nRF905 module
 141   1      //      TxBuf[0]=1;
 142   1      //      TxBuf[1]=1;
 143   1      //      SetTxMode();                            // Set Tx Mode
 144   1      //      TxPacket();                             // Transmit Tx buffer data
 145   1      //      TxBuf[0] = 0xff;
 146   1      //      TxBuf[1] = 0xff;
 147   1      LED1=0;
 148   1      LED2=0;
 149   1      Delay(150);
 150   1      LED1=1;
 151   1      LED2=1;
 152   1      
 153   1                                              // led close
 154   1      //      SetRxMode();                            // Set nRF905 in Rx mode
 155   1      
 156   1      
 157   1      /******************加入串口********************************************
 158   1              SCON=0x50;//串口方式1，允许接收
 159   1         TMOD=0x20;//定时器1，定时方式2
 160   1         TCON=0x40;//设定时器1开始计数
 161   1         TH1=0xE8;//11.0592MHz, 1200波特率
 162   1         TL1=0xE8;
 163   1         TI=1;
 164   1         TR1=1;
 165   1      send("before while(1).\n");
 166   1      ******************串口加入结束********************************************/
 167   1      /*#####################加入的舵机程序部分二######################*/
 168   1          out_1=0;
 169   1          out_2=0;
 170   1          TMOD=0x11;
 171   1          TH0=0xB8;             //1ms延时常数 12M
 172   1          TL0=0x00;            //频率调节
 173   1      
 174   1          TH1=0xB8;            //脉宽调节//就差这一点了
 175   1          TL1=0x00;
 176   1      
 177   1           EA=1;
 178   1           ET0=1;
 179   1           ET1=1;    
C51 COMPILER V7.00  SHOUDUAN                                                               06/02/2010 22:00:00 PAGE 4   

 180   1           TR0=1;
 181   1                TR1=1;
 182   1      
 183   1      
 184   1      refree_allpins();
 185   1      /*#####################舵机部分程序二加入完毕#######################*/
 186   1      
 187   1      while(1)
 188   1      {refree_allpins();
 189   2      /***********************************************************/
 190   2                        Delay(1);
 191   2                      SetRxMode();
 192   2      
 193   2      
 194   2                 if (DR){                     // If recive data ready... 
 195   3                 RxPacket();                  // ... recive data
 196   3                      //send("waiting for receive......\n");
 197   3              }
 198   2                                      refree_allpins();
 199   2      /*****************************************************/
 200   2                      /*##################加入的舵机程序部分三################################*/
 201   2                      if(RxBuf[0]==1){
 202   3                  if(PWM_1<0xFBF7){
 203   4                                      PWM_1=PWM_1+10; 
 204   4                                      LED3=1;
 205   4                                      delayms(2);
 206   4                                      }
 207   3                 else {
 208   4                                LED3=0;
 209   4                                } 
 210   3               }//duoji_1_UP//duoji_1_DOWN
 211   2      
 212   2           if(RxBuf[1]==1){
 213   3                 if(PWM_1>0xF93B){
 214   4                                  PWM_1=PWM_1-10; 
 215   4                                LED4=1;
 216   4                                delayms(2);
 217   4                                }
 218   3                 else {
 219   4                                LED4=0;
 220   4                                } 
 221   3                }
 222   2      
 223   2                      if(RxBuf[2]==1){
 224   3                 if(PWM_2<0xFD94){//原来FBF7
 225   4                                  PWM_2=PWM_2+10; 
 226   4                                LED3=1;
 227   4                                delayms(2);
 228   4                                }
 229   3                 else {
 230   4                                LED3=0;
 231   4                                } 
 232   3                }
 233   2      
 234   2                       if(RxBuf[3]==1){
 235   3                 if(PWM_2>0xF93B){
 236   4                                  PWM_2=PWM_2-10; 
 237   4                                LED4=1;
 238   4                                delayms(2);
 239   4                                }
 240   3                 else {
 241   4                                LED4=0;
C51 COMPILER V7.00  SHOUDUAN                                                               06/02/2010 22:00:00 PAGE 5   

 242   4                                } 
 243   3                }
 244   2      
 245   2      /*################舵机部分程序三加入完毕################################*/
 246   2      /*******************************直流电机加入的第二部分*************************/
 247   2                              if(RxBuf[4]==1){
 248   3                                      motor11=1;
 249   3                                      motor12=0;
 250   3                                      motor21=1;
 251   3                                      motor22=0;
 252   3                              
 253   3                              }
 254   2                              
 255   2                              if(RxBuf[5]==1){
 256   3                                      motor11=0;
 257   3                                      motor12=1;
 258   3                                      motor21=0;
 259   3                                      motor22=1;
 260   3                              }
 261   2      
 262   2                              if(RxBuf[6]==1){
 263   3                                      motor11=0;
 264   3                                      motor12=1;
 265   3                                      motor21=1;
 266   3                                      motor22=0;
 267   3                              }
 268   2      
 269   2                              if(RxBuf[7]==1){
 270   3                                      motor11=1;
 271   3                                      motor12=0;
 272   3                                      motor21=0;
 273   3                                      motor22=1;
 274   3                              }
 275   2      
 276   2                              if(RxBuf[8]==1){
 277   3                                      motor11=0;
 278   3                                      motor12=0;
 279   3                                      motor21=1;
 280   3                                      motor22=0;
 281   3                              }
 282   2      
 283   2                              if(RxBuf[9]==1){
 284   3                                      motor11=1;
 285   3                                      motor12=0;
 286   3                                      motor21=0;
 287   3                                      motor22=0;
 288   3                              }
 289   2              
 290   2              delayms(20);
 291   2      /*******************************直流电机加入的第二部分完毕********************/
 292   2      
 293   2      if(KEY1==0){
 294   3                  if(PWM_1<0xFBF7){
 295   4                                      PWM_1++;
 296   4                                      delayms(2);
 297   4                                      }
 298   3                 else {LED1=0;} 
 299   3               }
 300   2      
 301   2           if(KEY2==0){
 302   3                 if(PWM_1>0xF93B){
 303   4                                PWM_1--;
C51 COMPILER V7.00  SHOUDUAN                                                               06/02/2010 22:00:00 PAGE 6   

 304   4                                delayms(2);
 305   4                                }
 306   3                 else {LED2=0;} 
 307   3                }
 308   2      
 309   2                      
 310   2      }
 311   1      
 312   1      }
 313          /*******************************************************************************************/
 314          /*******************************************************************************************/
 315          //function Config905();
 316          /*******************************************************************************************/
 317          void Config905(void)
 318          {
 319   1              uchar i;                                        
 320   1              CSN=0;                                          // Spi enable for write a spi command
 321   1              SpiWrite(WC);                           // Write config command写放配置命令
 322   1              for (i=0;i<RxTxConf.n;i++)      // Write configration words  写放配置字
 323   1              {
 324   2                      SpiWrite(RxTxConf.buf[i]);
 325   2              }
 326   1              CSN=1;                                          // Disable Spi
 327   1      }
 328          /*******************************************************************************************/
 329          //function SpiWrite();
 330          /*******************************************************************************************/
 331          void SpiWrite(uchar  byte)
 332          {
 333   1              uchar i;        
 334   1              DATA_BUF=byte;                          // Put function's parameter into a bdata variable               
 335   1              for (i=0;i<8;i++)                       // Setup byte circulation bits
 336   1              {       
 337   2                      
 338   2                      if (flag)                               // Put DATA_BUF.7 on data line
 339   2                              MOSI=1;
 340   2                      else
 341   2                              MOSI=0;
 342   2                      SCK=1;                                  // Set clock line high
 343   2                      DATA_BUF=DATA_BUF<<1;   // Shift DATA_BUF
 344   2                      SCK=0;                                  // Set clock line low 
 345   2              }       
 346   1      }
 347          /*******************************************************************************************/
 348          //function SpiRead();
 349          /*******************************************************************************************/
 350          uchar SpiRead(void)
 351          {
 352   1              uchar i;        
 353   1              for (i=0;i<8;i++)                       // Setup byte circulation bits
 354   1              {       
 355   2                      DATA_BUF=DATA_BUF<<1;   // Right shift DATA_BUF
 356   2                      SCK=1;                                  // Set clock line high
 357   2                      if (MISO)
 358   2                              flag1=1;                        // Read data
 359   2                      else
 360   2                              flag1=0;
 361   2                                                              
 362   2                      
 363   2                      SCK=0;                                  // Set clock line low
 364   2              }
 365   1              return DATA_BUF;                        // Return function parameter
C51 COMPILER V7.00  SHOUDUAN                                                               06/02/2010 22:00:00 PAGE 7   

 366   1      }
 367          /*******************************************************************************************/
 368          //function TxPacket();
 369          /*******************************************************************************************
 370          void TxPacket(void)
 371          {
 372                  uchar i;
 373                  //Config905();                          
 374                  CSN=0;                                          // Spi enable for write a spi command   
 375                  SpiWrite(WTP);                          // Write payload command
 376                  for (i=0;i<32;i++)
 377                  {
 378                          SpiWrite(TxBuf[i]);             // Write 32 bytes Tx data
 379                  }
 380                  CSN=1;                                          // Spi disable                                          
 381                  Delay(1);
 382                  CSN=0;                                          // Spi enable for write a spi command   
 383                  SpiWrite(WTA);                          // Write address command
 384                  for (i=0;i<4;i++)                       // Write 4 bytes address
 385                  {
 386                          SpiWrite(RxTxConf.buf[i+5]);
 387                  }       
 388                  CSN=1;                                          // Spi disable
 389                  TRX_CE=1;                                       // Set TRX_CE high,start Tx data transmission
 390                  Delay(1);                                       // while (DR!=1);
 391                  TRX_CE=0;                                       // Set TRX_CE low
 392          }
 393          /*******************************************************************************************/
 394          //function RxPacket();
 395          /*******************************************************************************************/
 396          void RxPacket(void)
 397          {
 398   1              uchar i;        
 399   1              TRX_CE=0;                                       // Set nRF905 in standby mode   
 400   1              CSN=0;                                          // Spi enable for write a spi command
 401   1              SpiWrite(RRP);                          // Read payload command 
 402   1              for (i=0;i<32;i++)
 403   1              {
 404   2                      RxBuf[i]=SpiRead();             // Read data and save to buffer         
 405   2              }
 406   1              CSN=1;                                          // Disable spi
 407   1              while(DR||AM);  
 408   1              TRX_CE=1;
 409   1               //=====================
 410   1                if(RxBuf[0]==1){ 
 411   2                                                              LED1 =0;
 412   2                //                                            duoji_1_UP=1;
 413   2                                                              }
 414   1                      else {
 415   2                                                              LED1 =1;
 416   2              //                                              duoji_1_UP=0;
 417   2                      }
 418   1      
 419   1                 if(RxBuf[1] == 1) {
 420   2                                                              LED2 =0;
 421   2                      //                                      duoji_1_DOWN=1;
 422   2                      }
 423   1                      else{ 
 424   2                                                              LED2 =1;
 425   2                      //                                      duoji_1_DOWN=0;
 426   2                      }                                                       
 427   1                                                              
C51 COMPILER V7.00  SHOUDUAN                                                               06/02/2010 22:00:00 PAGE 8   

 428   1      }
 429          
 430          /*******************************************************************************************/
 431          //function SetTxMode();
 432          /*******************************************************************************************
 433          void SetTxMode(void)                            
 434          {       
 435                  TX_EN=1;
 436                  TRX_CE=0;
 437                  Delay(1);                                       // delay for mode change(>=650us)
 438          }                               
 439          /*******************************************************************************************/
 440          //function SetRxMode();
 441          /*******************************************************************************************/
 442          void SetRxMode(void)
 443          {
 444   1              TX_EN=0;
 445   1              TRX_CE=1;
 446   1              Delay(1);                                       // delay for mode change(>=650us)                               
 447   1      }
 448          
 449          
 450          
 451          /***************************************
 452          void send(unsigned char str[])
 453          {
 454                  unsigned int i=0;
 455                  while(str[i]!='\0')
 456                  {
 457                          SBUF=str[i];
 458                          while(!TI);
 459                          TI=0;
 460                          i++;
 461                          }
 462          }
 463          ***************************************/
 464          void delayms(unsigned char ms) 
 465          
 466          {
 467   1          unsigned char i;
 468   1          while(ms--)
 469   1           {
 470   2              for(i=0;i<120;i++);
 471   2           }
 472   1      }
 473          
 474          /*********************************************************/
 475          // 定时器0中断服务程序.(用于舵机1)
 476          /*********************************************************/
 477          void timer0() interrupt 1 
 478          {  
 479   1              if(longorshorttimerflag==0){
 480   2                      TR0=0;
 481   2                              TH0=(PWM_1/256);            //脉宽调节
 482   2                      TL0=(PWM_1%256);
 483   2                       out_1=1;      //启动输出
 484   2                               longorshorttimerflag=!longorshorttimerflag;
 485   2                               TR0=1;
 486   2               }
 487   1              else {
 488   2                      
 489   2                      TR0=0;
C51 COMPILER V7.00  SHOUDUAN                                                               06/02/2010 22:00:00 PAGE 9   

 490   2                      timerbuf[0]=-0xB800+PWM_1;
 491   2                      TH0=timerbuf[0]/256;
 492   2                      TL0=timerbuf[0]%256;
 493   2                      out_1=0;      //关闭输出
 494   2                      longorshorttimerflag=!longorshorttimerflag;
 495   2                      TR0=1;
 496   2              }
 497   1      }
 498          
 499          /*********************************************************/
 500          // 定时器1中断服务程序
 501          /*********************************************************/
 502          void timer1() interrupt 3 
 503          { 
 504   1              if(longorshorttimerflag_2==0){
 505   2                      TR1=0;
 506   2                              TH1=(PWM_2/256);            //脉宽调节
 507   2                      TL1=(PWM_2%256);
 508   2                       out_2=1;      //启动输出
 509   2                               longorshorttimerflag_2=!longorshorttimerflag_2;
 510   2                               TR1=1;
 511   2               }
 512   1              else {
 513   2                      
 514   2                      TR1=0;
 515   2                      timerbuf[1]=-0xB800+PWM_2;
 516   2                      TH0=timerbuf[1]/256;
 517   2                      TL0=timerbuf[1]%256;
 518   2                      out_2=0;      //关闭输出
 519   2                      longorshorttimerflag_2=!longorshorttimerflag_2;
 520   2                      TR1=1;
 521   2              }
 522   1      }
 523          /*********************************************************/
 524          void refree_allpins(){
 525   1      
 526   1                  motor11=0;
 527   1                                      motor12=0;
 528   1                                      motor21=0;
 529   1                                      motor22=0;
 530   1      
 531   1      }
 532          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    696    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     78       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
