C51 COMPILER V7.00  NRF905                                                                 05/27/2010 21:36:25 PAGE 1   


C51 COMPILER V7.00, COMPILATION OF MODULE NRF905
OBJECT MODULE PLACED IN nrf905.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE nrf905.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          /******************************************************************************************\ 
   2          ============================================================================================
   3          * T905.c
   4          *
   5          * This file is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTYT; 
   6          * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
   7          *
   8          *
   9          * NOTES:
  10          * This program is for the nRF905 with 232 interface;
  11          * $write date: 2004.4.7 ;time 11:00$
  12          * $Revision: 1 $
  13          *
  14          /*******************************************************************************************/
  15          #include <reg52.h>
  16          #include <intrins.h>
  17          
  18          #define uchar unsigned char 
  19          #define uint  unsigned int
  20          
  21          #define WC              0x00                    // Write configuration register command
  22          #define RC              0x10                    // Read  configuration register command
  23          #define WTP             0x20                    // Write TX Payload  command
  24          #define RTP             0x21                    // Read  TX Payload  command
  25          #define WTA             0x22                    // Write TX Address  command
  26          #define RTA             0x23                    // Read  TX Address  command
  27          #define RRP             0x24                    // Read  RX Payload  command
  28          /*******************************************************************************************/
  29          typedef struct RFConfig
  30          {
  31                  uchar n;
  32                  uchar buf[10];
  33          }RFConfig;
  34          
  35          code RFConfig RxTxConf={
  36                  10,
  37                  0x01, 0x0c, 0x44, 0x20, 0x20, 0xcc, 0xcc, 0xcc,0xcc, 0x58       
  38          };
  39          // The content of this struct is nRF905's initialize data.初始化数据
  40          // CH_NO=1;433MHZ;Normal Opration,No Retrans;RX,TX Address is 4 Bytes
  41          // RX TX Payload Width is 32 Bytes;Disable Extern Clock;Fosc=16MHZ
  42          // 8 Bits CRC And enable
  43          /*******************************************************************************************/
  44          uchar data TxBuf[32];
  45          uchar data RxBuf[32];
  46          uchar data Textbuf[2];
  47          uchar key;
  48          uchar rsbrf;
  49          uchar delayf;
  50          uchar tf;
  51          /*******************************************************************************************/
  52          uchar bdata DATA_BUF;
  53          sbit    flag=DATA_BUF^7;
  54          sbit    flag1=DATA_BUF^0;
  55          /*******************************************************************************************/
C51 COMPILER V7.00  NRF905                                                                 05/27/2010 21:36:25 PAGE 2   

  56          sbit    TX_EN=P1^7;
  57          sbit    TRX_CE=P1^6;
  58          sbit    PWR_UP=P1^5;
  59          sbit    MISO=P1^1;
  60          sbit    MOSI=P1^0;
  61          sbit    SCK=P3^7;
  62          sbit    CSN=P3^3;
  63          
  64          sbit    AM=P1^3;//地址匹配
  65          sbit    DR=P3^2;//接收或发射完成
  66          sbit    CD=P1^4;//载波检测
  67          
  68          sbit    LED1=P2^6;
  69          sbit    LED2=P2^7;
  70          sbit    KEY1=P3^0;
  71          sbit    KEY2=P3^1;
  72          
  73          /*******************************************************************************************/
  74          void InitIO(void);                      // Initialize IO port
  75          void Inituart(void);                    // initialize 232 uart
  76          void Config905(void);                   // Config nRF905 module(组件、模块)配置NRF905模式
  77          void SetTxMode(void);                   // Set nRF905 in Tx mode
  78          void SetRxMode(void);                   // Set nRF905 in Rx mode
  79          void TxPacket(void);                    // Send data by nRF905
  80          void RxPacket(void);                    // Recive data by nRF905
  81          void SpiWrite(uchar);                   // Write data to nRF905
  82          uchar SpiRead(void);                    // Read data to nRF905
  83          void Delay(uchar n);                    // Delay 100us
  84          void Scankey(void);                             // Scan key
  85          void TxData (uchar x);                  // Send key_value to CRT display
  86          void comdebug(void);
  87          void send(unsigned char str[]);
  88          /*******************************************************************************************/
  89          void Delay(uchar n)
  90          {
  91   1              uint i;
  92   1              while(n--)
  93   1              for(i=0;i<80;i++);      
  94   1      }
  95          
  96          void main()
  97          {
  98   1          //================NRF905初始化
  99   1              CSN=1;                                          // Spi  disable                                         
 100   1              SCK=0;                                          // Spi clock line init high
 101   1              DR=1;                                           // Init DR for input
 102   1              AM=1;                                           // Init AM for input
 103   1              PWR_UP=1;                                       // nRF905 power on
 104   1              TRX_CE=0;                                       // Set nRF905 in standby mode
 105   1              TX_EN=0;                                        // set radio in Rx mode 
 106   1      
 107   1              //================
 108   1              Config905();                            // Config nRF905 module
 109   1      //      TxBuf[0]=1;
 110   1      //      TxBuf[1]=1;
 111   1      //      SetTxMode();                            // Set Tx Mode
 112   1      //      TxPacket();                             // Transmit Tx buffer data
 113   1      //      TxBuf[0] = 0xff;
 114   1      //      TxBuf[1] = 0xff;
 115   1      LED1=0;
 116   1      LED2=0;
 117   1      Delay(150);
C51 COMPILER V7.00  NRF905                                                                 05/27/2010 21:36:25 PAGE 3   

 118   1      LED1=1;
 119   1      LED2=1;
 120   1      
 121   1                                              // led close
 122   1      //      SetRxMode();                            // Set nRF905 in Rx mode
 123   1         tf=0;
 124   1      
 125   1      /******************加入串口********************************************/
 126   1              SCON=0x50;//串口方式1，允许接收
 127   1         TMOD=0x20;//定时器1，定时方式2
 128   1         TCON=0x40;//设定时器1开始计数
 129   1         TH1=0xE8;//11.0592MHz, 1200波特率
 130   1         TL1=0xE8;
 131   1         TI=1;
 132   1         TR1=1;
 133   1      send("before while(1).\n");
 134   1      /******************串口加入结束********************************************/
 135   1      
 136   1      while(1)
 137   1      {
 138   2      /*
 139   2      LED1=0;
 140   2      LED2=0;
 141   2      Delay(150);
 142   2      LED1=1;
 143   2      LED2=1;
 144   2      */
 145   2      
 146   2              if(KEY1==0){LED1=0;
 147   3                                         TxBuf[0]=1;
 148   3                                              while(KEY1==0){
 149   4      //                                               TxBuf[0]=1;
 150   4                                                       SetTxMode();
 151   4                                                       TxPacket();
 152   4                                                       }
 153   3      
 154   3                              TxBuf[0]=0xff;
 155   3                              TxBuf[1]=0xff;
 156   3                              SetTxMode();                            // Set Tx Mode
 157   3                         TxPacket();          // Transmit Tx buffer data
 158   3      
 159   3                                              tf=1;
 160   3      //                                      send("key 1 presed!\n");
 161   3                                              }
 162   2      
 163   2              if(KEY2==0){LED2=0;
 164   3                     TxBuf[1]=1;
 165   3                                              while(KEY2==0){
 166   4      //                                               TxBuf[0]=1;
 167   4                                                       SetTxMode();
 168   4                                                       TxPacket();
 169   4                                                       }
 170   3      
 171   3                              TxBuf[0]=0xff;
 172   3                              TxBuf[1]=0xff;
 173   3                              SetTxMode();                            // Set Tx Mode
 174   3                         TxPacket();          // Transmit Tx buffer data
 175   3      
 176   3                                              tf=1;
 177   3      //                                      send("key 2 presed!\n");
 178   3                                              }
 179   2      //      send("####\n");
C51 COMPILER V7.00  NRF905                                                                 05/27/2010 21:36:25 PAGE 4   

 180   2              if(tf==1)
 181   2                   {  
 182   3                        send("here is in if.\n");
 183   3                        Delay(1);
 184   3                        //===============NRF905发送相应的按键   
 185   3                              TxBuf[0]=0xff;
 186   3                              TxBuf[1]=0xff;
 187   3                              SetTxMode();                            // Set Tx Mode
 188   3                         TxPacket();          // Transmit Tx buffer data
 189   3      
 190   3      //                      SetRxMode();                            // Set nRF905 in Rx mode
 191   3                              tf=0;
 192   3                        }
 193   2      
 194   2               //=====================等待NRF905接收
 195   2                      SetRxMode();
 196   2                 if (DR){                     // If recive data ready... 
 197   3                 RxPacket();                  // ... recive data
 198   3                      send("waiting for receive......\n");
 199   3                      }
 200   2      }
 201   1      
 202   1      }
 203          /*******************************************************************************************/
 204          /*******************************************************************************************/
 205          //function Config905();
 206          /*******************************************************************************************/
 207          void Config905(void)
 208          {
 209   1              uchar i;                                        
 210   1              CSN=0;// Spi enable for write a spi command
 211   1      //      send("write buf[i]\n");
 212   1              SpiWrite(WC);                           // Write config command写放配置命令
 213   1              for (i=0;i<RxTxConf.n;i++)      // Write configration words  写放配置字
 214   1              {
 215   2                      SpiWrite(RxTxConf.buf[i]);      
 216   2      
 217   2              }
 218   1              CSN=1;                                          // Disable Spi
 219   1      //      send("Config905 complete.\n");
 220   1      }
 221          /*******************************************************************************************/
 222          //function SpiWrite();
 223          /*******************************************************************************************/
 224          void SpiWrite(uchar  byte)
 225          {
 226   1              uchar i;        
 227   1              DATA_BUF=byte;                          // Put function's parameter into a bdata variable               
 228   1              for (i=0;i<8;i++)                       // Setup byte circulation bits
 229   1              {       
 230   2                      if (flag)                               // Put DATA_BUF.7 on data line
 231   2                              MOSI=1;
 232   2                      else
 233   2                              MOSI=0;
 234   2                      SCK=1;                                  // Set clock line high
 235   2                      DATA_BUF=DATA_BUF<<1;   // Shift DATA_BUF
 236   2      
 237   2                      SCK=0;                                  // Set clock line low 
 238   2      
 239   2              }       
 240   1      }
 241          /*******************************************************************************************/
C51 COMPILER V7.00  NRF905                                                                 05/27/2010 21:36:25 PAGE 5   

 242          //function SpiRead();
 243          /*******************************************************************************************/
 244          uchar SpiRead(void)
 245          {
 246   1              uchar i;        
 247   1              for (i=0;i<8;i++)                       // Setup byte circulation bits
 248   1              {       
 249   2                      DATA_BUF=DATA_BUF<<1;   // Right shift DATA_BUF
 250   2                      SCK=1;                                  // Set clock line high
 251   2                      if (MISO)
 252   2                              flag1=1;                        // Read data
 253   2                      else
 254   2                              flag1=0;
 255   2                                                              
 256   2                      
 257   2                      SCK=0;                                  // Set clock line low
 258   2              }
 259   1              return DATA_BUF;                        // Return function parameter
 260   1      }
 261          /*******************************************************************************************/
 262          //function TxPacket();
 263          /*******************************************************************************************/
 264          void TxPacket(void)
 265          {
 266   1              uchar i;                        
 267   1              CSN=0;                                          // Spi enable for write a spi command   
 268   1              SpiWrite(WTP);                          // Write payload command
 269   1              for (i=0;i<32;i++)
 270   1              {
 271   2                      SpiWrite(TxBuf[i]);             // Write 32 bytes Tx data
 272   2                      }
 273   1              CSN=1;                                          // Spi disable                                          
 274   1              Delay(1);
 275   1              CSN=0;                                          // Spi enable for write a spi command   
 276   1              SpiWrite(WTA);                          // Write address command
 277   1              for (i=0;i<4;i++)                       // Write 4 bytes address
 278   1              {
 279   2                      SpiWrite(RxTxConf.buf[i+5]);
 280   2              }       
 281   1              CSN=1;                                          // Spi disable
 282   1              TRX_CE=1;                                       // Set TRX_CE high,start Tx data transmission
 283   1              Delay(3);                                       // while (DR!=1);
 284   1              TRX_CE=0;                                       // Set TRX_CE low
 285   1      //      send("write TxBuf over \n");
 286   1      }
 287          /*******************************************************************************************/
 288          //function RxPacket();
 289          /*******************************************************************************************/
 290          void RxPacket(void)
 291          {
 292   1              uchar i;        
 293   1              TRX_CE=0;                                       // Set nRF905 in standby mode   
 294   1              CSN=0;                                          // Spi enable for write a spi command
 295   1              SpiWrite(RRP);                          // Read payload command 
 296   1              for (i=0;i<32;i++)
 297   1              {
 298   2                      RxBuf[i]=SpiRead();             // Read data and save to buffer 
 299   2              }
 300   1              CSN=1;                                          // Disable spi
 301   1              while(DR||AM);  
 302   1              TRX_CE=1;       
 303   1      
C51 COMPILER V7.00  NRF905                                                                 05/27/2010 21:36:25 PAGE 6   

 304   1              if(RxBuf[0]==1) {LED1=0;
 305   2              send("received key 1 presed!\n");
 306   2              }
 307   1              else if(RxBuf[0]==0xff){ LED1=1;
 308   2              send("LED1 out!\n");
 309   2              }
 310   1              if(RxBuf[1]==1) {LED2=0;
 311   2              send("received key 2 presed!\n");
 312   2              }
 313   1              else if(RxBuf[1]==0xff){ LED2=1;
 314   2              send("LED2 out!\n");}
 315   1      
 316   1      
 317   1      send("read PxPacket over \n");  
 318   1      }
 319          /*******************************************************************************************/
 320          //function SetTxMode();
 321          /*******************************************************************************************/
 322          void SetTxMode(void)                            
 323          {//     send("setTXmode\n");
 324   1              TX_EN=1;
 325   1              TRX_CE=0;
 326   1              Delay(1);                                       // delay for mode change(>=650us)
 327   1      }                               
 328          /*******************************************************************************************/
 329          //function SetRxMode();
 330          /*******************************************************************************************/
 331          void SetRxMode(void)
 332          {
 333   1      //send("setRXmode\n");
 334   1              TX_EN=0;
 335   1              TRX_CE=1;
 336   1              Delay(1);                                       // delay for mode change(>=650us)
 337   1              
 338   1      //      printf("*************************************");
 339   1      //      printf("setRXmode:\n");
 340   1      //      printf("TX_EN=%d,TRX_CE=%d\n",TX_EN,TRX_CE);            
 341   1      }
 342          
 343          
 344          void send(unsigned char str[])
 345          {
 346   1              unsigned int i=0;
 347   1              while(str[i]!='\0')
 348   1              {
 349   2                      SBUF=str[i];
 350   2                      while(!TI);
 351   2                      TI=0;
 352   2                      i++;
 353   2                      }
 354   1      }
 355          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    515    ----
   CONSTANT SIZE    =    163    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     71       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V7.00  NRF905                                                                 05/27/2010 21:36:25 PAGE 7   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
